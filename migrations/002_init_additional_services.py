"""
–ú–∏–≥—Ä–∞—Ü–∏—è: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª—É–≥
–û–ø–∏—Å–∞–Ω–∏–µ: –°–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤—ã–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ –≤ —Å–∏—Å—Ç–µ–º–µ
"""
import sqlite3
from pathlib import Path


# –ë–∞–∑–æ–≤—ã–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏
DEFAULT_SERVICES = [
    {
        "service_id": "youngDriver",
        "label": "–ú–æ–ª–æ–¥–æ–π –≤–æ–¥–∏—Ç–µ–ª—å (18-21 –≥–æ–¥)",
        "description": "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ–ø—Ü–∏—è –¥–ª—è –≤–æ–¥–∏—Ç–µ–ª–µ–π –≤ –≤–æ–∑—Ä–∞—Å—Ç–µ –æ—Ç 18 –¥–æ 21 –≥–æ–¥–∞. –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø–æ–ª–Ω–æ–µ —Å—Ç—Ä–∞—Ö–æ–≤–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ.",
        "fee": 5000.0,
        "fee_type": "fixed",
        "icon_key": "User",
        "is_active": True
    },
    {
        "service_id": "childSeat",
        "label": "–î–µ—Ç—Å–∫–æ–µ –∫—Ä–µ—Å–ª–æ",
        "description": "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –∫–æ–º—Ñ–æ—Ä—Ç –¥–ª—è –≤–∞—à–∏—Ö –º–∞–ª–µ–Ω—å–∫–∏—Ö –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –ø–æ –∑–∞–ø—Ä–æ—Å—É.",
        "fee": 700.0,
        "fee_type": "fixed",
        "icon_key": "Baby",
        "is_active": True
    },
    {
        "service_id": "personalDriver",
        "label": "–õ–∏—á–Ω—ã–π –≤–æ–¥–∏—Ç–µ–ª—å",
        "description": "–ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –ø–æ–µ–∑–¥–∫–æ–π, –¥–æ–≤–µ—Ä–∏–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—É. –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –¥–µ–ª–æ–≤—ã—Ö –ø–æ–µ–∑–¥–æ–∫ –∏–ª–∏ —ç–∫—Å–∫—É—Ä—Å–∏–π.",
        "fee": 6000.0,
        "fee_type": "fixed",
        "icon_key": "UserCheck",
        "is_active": True
    },
    {
        "service_id": "ps5",
        "label": "PlayStation 5",
        "description": "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è –≤ –¥–æ—Ä–æ–≥–µ –¥–ª—è –¥–µ—Ç–µ–π –∏ –≤–∑—Ä–æ—Å–ª—ã—Ö. –í –≤–∞—à–µ–º —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–∏ PS5 —Å –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∏–≥—Ä - –≥–æ—Ç–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –ª—é–±–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è!",
        "fee": 1000.0,
        "fee_type": "fixed",
        "icon_key": "Gamepad2",
        "is_active": True
    },
    {
        "service_id": "transmission",
        "label": "–ü–µ—Ä–µ–¥–∞—á–∞ —Ä—É–ª—è",
        "description": "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–¥–∞—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–º –¥—Ä—É–≥–æ–º—É –≤–æ–¥–∏—Ç–µ–ª—é. –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –¥–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–µ–∑–¥–æ–∫ —Å –∫–æ–º–ø–∞–Ω–∏–µ–π.",
        "fee": 4000.0,
        "fee_type": "fixed",
        "icon_key": "Settings",
        "is_active": True
    }
]


def migrate() -> bool:
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏—é"""
    db_path = Path("baz_car.db")
    
    if not db_path.exists():
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return False
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —É—Å–ª—É–≥–∏ –≤ –±–∞–∑–µ
        cursor.execute("SELECT COUNT(*) FROM additional_services")
        existing_count = cursor.fetchone()[0]
        
        if existing_count > 0:
            print(f"‚úÖ –í –±–∞–∑–µ —É–∂–µ –µ—Å—Ç—å {existing_count} –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª—É–≥. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é.")
            conn.close()
            return True
        
        print("üîÑ –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏...")
        
        # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ —É—Å–ª—É–≥–∏
        for service_data in DEFAULT_SERVICES:
            cursor.execute("""
                INSERT INTO additional_services 
                (service_id, label, description, fee, fee_type, icon_key, is_active, created_at, updated_at)
                VALUES (?, ?, ?, ?, ?, ?, ?, datetime('now'), datetime('now'))
            """, (
                service_data['service_id'],
                service_data['label'],
                service_data['description'],
                service_data['fee'],
                service_data['fee_type'],
                service_data['icon_key'],
                service_data['is_active']
            ))
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()
        
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ {len(DEFAULT_SERVICES)} –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª—É–≥:")
        for service_data in DEFAULT_SERVICES:
            print(f"   - {service_data['label']} ({service_data['service_id']})")
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        if 'conn' in locals():
            conn.close()
        return False
